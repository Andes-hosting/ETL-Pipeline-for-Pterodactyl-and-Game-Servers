-- CREATE SCHEMA 
CREATE SCHEMA pterodactyl;

-- CREATE TABLES
CREATE TABLE pterodactyl.activity (
	id SERIAL PRIMARY KEY, --id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 ),
	server_id VARCHAR(8) NOT NULL,
	date DATE NOT NULL,
	time TIME NOT NULL,
	information VARCHAR(100),
	"user" VARCHAR(50),
	activity VARCHAR(6)
);

CREATE TABLE pterodactyl.servers (
	identifier VARCHAR(8) PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	node VARCHAR(20) NOT NULL,
	memory SMALLINT NOT NULL,
	disk SMALLINT NOT NULL,
	egg VARCHAR(20) NOT NULL,
    docker_image VARCHAR(40) NOT NULL
);

-- CREATE ANALYSIS VIEW
CREATE OR REPLACE VIEW pterodactyl.activity_analysis
AS (
    SELECT s.identifier,
        s.name,
        COUNT(DISTINCT CASE WHEN a."user" <> 'server' THEN a."user" END) AS total_users,
        COUNT(a.activity) AS total_activity,
        COUNT(DISTINCT CASE WHEN a.date >= CURRENT_DATE - INTERVAL '7 days' AND a."user" <> 'server' THEN a."user" END) AS last_week_active_users,
        COUNT(CASE WHEN a.date >= CURRENT_DATE - INTERVAL '7 days' THEN a.activity END) AS last_week_activity,
        COUNT(DISTINCT CASE WHEN a.date >= CURRENT_DATE - INTERVAL '30 days' AND a."user" <> 'server' THEN a."user" END) AS last_month_active_users,
        COUNT(CASE WHEN a.date >= CURRENT_DATE - INTERVAL '30 days' THEN a.activity END) AS last_month_activity,
        MAX(a.date) AS last_activity_date
    FROM pterodactyl.activity AS a
    INNER JOIN pterodactyl.servers AS s
        ON a.server_id = s.identifier
    GROUP BY s.identifier
);